{"ast":null,"code":"var _jsxFileName = \"/home/fouad/Desktop/the-modern-react-bootcamp/11-hangman-starter/src/Hangman.js\";\nimport React, { Component } from \"react\";\nimport \"./Hangman.css\";\nimport { randomWord } from \"./words\";\nimport img0 from \"./0.jpg\";\nimport img1 from \"./1.jpg\";\nimport img2 from \"./2.jpg\";\nimport img3 from \"./3.jpg\";\nimport img4 from \"./4.jpg\";\nimport img5 from \"./5.jpg\";\nimport img6 from \"./6.jpg\";\n\nclass Hangman extends Component {\n  /** by default, allow 6 guesses and use provided gallows images. */\n  constructor(props) {\n    super(props);\n\n    this.gameOver = () => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 4\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 5\n        }\n      }, \"The Right word is \", this.state.answer), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.restart,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 5\n        }\n      }, \"Restart game\"));\n    };\n\n    this.state = {\n      nWrong: 0,\n      guessed: new Set(),\n      answer: randomWord()\n    };\n    this.handleGuess = this.handleGuess.bind(this);\n  }\n  /** guessedWord: show current-state of word:\n     if guessed letters are {a,p,e}, show \"app_e\" for \"apple\"\n   */\n\n\n  guessedWord() {\n    return this.state.answer.split(\"\").map(ltr => this.state.guessed.has(ltr) ? ltr : \"_\");\n  }\n  /** handleGuest: handle a guessed letter:\n     - add to guessed letters\n     - if not in answer, increase number-wrong guesses\n   */\n\n\n  handleGuess(evt) {\n    let ltr = evt.target.value;\n    this.setState(st => ({\n      guessed: st.guessed.add(ltr),\n      nWrong: st.nWrong + (st.answer.includes(ltr) ? 0 : 1)\n    }));\n  }\n  /** generateButtons: return array of letter buttons to render */\n\n\n  generateButtons() {\n    return \"abcdefghijklmnopqrstuvwxyz\".split(\"\").map(ltr => /*#__PURE__*/React.createElement(\"button\", {\n      value: ltr,\n      onClick: this.handleGuess,\n      disabled: this.state.guessed.has(ltr),\n      key: ltr,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 4\n      }\n    }, ltr));\n  }\n\n  restart() {\n    this.setState = {\n      nWrong: 0,\n      guessed: new Set(),\n      answer: randomWord()\n    };\n  }\n\n  /** render: render game */\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Hangman\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 5\n      }\n    }, \"Hangman\"), /*#__PURE__*/React.createElement(\"img\", {\n      src: this.props.images[this.state.nWrong],\n      alt: this.state.guessed,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 5\n      }\n    }, \"Number of wrong guesses: \", this.state.nWrong, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"Hangman-word\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 5\n      }\n    }, this.guessedWord()), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"Hangman-btns\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 5\n      }\n    }, this.state.nWrong < this.props.maxWrong ? this.generateButtons() : this.gameOver()));\n  }\n\n}\n\nHangman.defaultProps = {\n  maxWrong: randomWord().length,\n  images: [img0, img1, img2, img3, img4, img5, img6]\n};\nexport default Hangman;","map":{"version":3,"sources":["/home/fouad/Desktop/the-modern-react-bootcamp/11-hangman-starter/src/Hangman.js"],"names":["React","Component","randomWord","img0","img1","img2","img3","img4","img5","img6","Hangman","constructor","props","gameOver","state","answer","restart","nWrong","guessed","Set","handleGuess","bind","guessedWord","split","map","ltr","has","evt","target","value","setState","st","add","includes","generateButtons","render","images","maxWrong","defaultProps","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,eAAP;AACA,SAASC,UAAT,QAA2B,SAA3B;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,IAAP,MAAiB,SAAjB;;AAEA,MAAMC,OAAN,SAAsBT,SAAtB,CAAgC;AAC/B;AAMAU,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;;AADkB,SA6CnBC,QA7CmB,GA6CR,MAAM;AAChB,0BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAsB,KAAKC,KAAL,CAAWC,MAAjC,CADD,eAEC;AAAQ,QAAA,OAAO,EAAE,KAAKC,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFD,CADD;AAMA,KApDkB;;AAElB,SAAKF,KAAL,GAAa;AAAEG,MAAAA,MAAM,EAAE,CAAV;AAAaC,MAAAA,OAAO,EAAE,IAAIC,GAAJ,EAAtB;AAAiCJ,MAAAA,MAAM,EAAEb,UAAU;AAAnD,KAAb;AACA,SAAKkB,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACA;AAED;;;;;AAGAC,EAAAA,WAAW,GAAG;AACb,WAAO,KAAKR,KAAL,CAAWC,MAAX,CACLQ,KADK,CACC,EADD,EAELC,GAFK,CAEAC,GAAD,IAAU,KAAKX,KAAL,CAAWI,OAAX,CAAmBQ,GAAnB,CAAuBD,GAAvB,IAA8BA,GAA9B,GAAoC,GAF7C,CAAP;AAGA;AAED;;;;;;AAIAL,EAAAA,WAAW,CAACO,GAAD,EAAM;AAChB,QAAIF,GAAG,GAAGE,GAAG,CAACC,MAAJ,CAAWC,KAArB;AACA,SAAKC,QAAL,CAAeC,EAAD,KAAS;AACtBb,MAAAA,OAAO,EAAEa,EAAE,CAACb,OAAH,CAAWc,GAAX,CAAeP,GAAf,CADa;AAEtBR,MAAAA,MAAM,EAAEc,EAAE,CAACd,MAAH,IAAac,EAAE,CAAChB,MAAH,CAAUkB,QAAV,CAAmBR,GAAnB,IAA0B,CAA1B,GAA8B,CAA3C;AAFc,KAAT,CAAd;AAIA;AAED;;;AACAS,EAAAA,eAAe,GAAG;AACjB,WAAO,6BAA6BX,KAA7B,CAAmC,EAAnC,EAAuCC,GAAvC,CAA4CC,GAAD,iBACjD;AACC,MAAA,KAAK,EAAEA,GADR;AAEC,MAAA,OAAO,EAAE,KAAKL,WAFf;AAGC,MAAA,QAAQ,EAAE,KAAKN,KAAL,CAAWI,OAAX,CAAmBQ,GAAnB,CAAuBD,GAAvB,CAHX;AAIC,MAAA,GAAG,EAAEA,GAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMEA,GANF,CADM,CAAP;AAUA;;AAEDT,EAAAA,OAAO,GAAG;AACP,SAAKc,QAAL,GAAgB;AAAEb,MAAAA,MAAM,EAAE,CAAV;AAAaC,MAAAA,OAAO,EAAE,IAAIC,GAAJ,EAAtB;AAAiCJ,MAAAA,MAAM,EAAEb,UAAU;AAAnD,KAAhB;AACD;;AAWF;AACAiC,EAAAA,MAAM,GAAG;AACR,wBACC;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADD,eAEC;AACC,MAAA,GAAG,EAAE,KAAKvB,KAAL,CAAWwB,MAAX,CAAkB,KAAKtB,KAAL,CAAWG,MAA7B,CADN;AAEC,MAAA,GAAG,EAAE,KAAKH,KAAL,CAAWI,OAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,eAMC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAA6B,KAAKJ,KAAL,CAAWG,MAAxC,MAND,eAOC;AAAG,MAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6B,KAAKK,WAAL,EAA7B,CAPD,eAQC;AAAG,MAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAKR,KAAL,CAAWG,MAAX,GAAoB,KAAKL,KAAL,CAAWyB,QAA/B,GACE,KAAKH,eAAL,EADF,GAEE,KAAKrB,QAAL,EAHJ,CARD,CADD;AAgBA;;AA/E8B;;AAA1BH,O,CAEE4B,Y,GAAe;AACrBD,EAAAA,QAAQ,EAAEnC,UAAU,GAAGqC,MADF;AAErBH,EAAAA,MAAM,EAAE,CAACjC,IAAD,EAAOC,IAAP,EAAaC,IAAb,EAAmBC,IAAnB,EAAyBC,IAAzB,EAA+BC,IAA/B,EAAqCC,IAArC;AAFa,C;AAgFvB,eAAeC,OAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Hangman.css\";\nimport { randomWord } from \"./words\";\nimport img0 from \"./0.jpg\";\nimport img1 from \"./1.jpg\";\nimport img2 from \"./2.jpg\";\nimport img3 from \"./3.jpg\";\nimport img4 from \"./4.jpg\";\nimport img5 from \"./5.jpg\";\nimport img6 from \"./6.jpg\";\n\nclass Hangman extends Component {\n\t/** by default, allow 6 guesses and use provided gallows images. */\n\tstatic defaultProps = {\n\t\tmaxWrong: randomWord().length,\n\t\timages: [img0, img1, img2, img3, img4, img5, img6],\n\t};\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = { nWrong: 0, guessed: new Set(), answer: randomWord() };\n\t\tthis.handleGuess = this.handleGuess.bind(this);\n\t}\n\n\t/** guessedWord: show current-state of word:\n    if guessed letters are {a,p,e}, show \"app_e\" for \"apple\"\n  */\n\tguessedWord() {\n\t\treturn this.state.answer\n\t\t\t.split(\"\")\n\t\t\t.map((ltr) => (this.state.guessed.has(ltr) ? ltr : \"_\"));\n\t}\n\n\t/** handleGuest: handle a guessed letter:\n    - add to guessed letters\n    - if not in answer, increase number-wrong guesses\n  */\n\thandleGuess(evt) {\n\t\tlet ltr = evt.target.value;\n\t\tthis.setState((st) => ({\n\t\t\tguessed: st.guessed.add(ltr),\n\t\t\tnWrong: st.nWrong + (st.answer.includes(ltr) ? 0 : 1),\n\t\t}));\n\t}\n\n\t/** generateButtons: return array of letter buttons to render */\n\tgenerateButtons() {\n\t\treturn \"abcdefghijklmnopqrstuvwxyz\".split(\"\").map((ltr) => (\n\t\t\t<button\n\t\t\t\tvalue={ltr}\n\t\t\t\tonClick={this.handleGuess}\n\t\t\t\tdisabled={this.state.guessed.has(ltr)}\n\t\t\t\tkey={ltr}\n\t\t\t>\n\t\t\t\t{ltr}\n\t\t\t</button>\n\t\t));\n\t}\n\n\trestart() {\n    this.setState = { nWrong: 0, guessed: new Set(), answer: randomWord() };\n  }\n\n\tgameOver = () => {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<p>The Right word is {this.state.answer}</p>\n\t\t\t\t<button onClick={this.restart}>Restart game</button>\n\t\t\t</div>\n\t\t);\n\t}\n\n\t/** render: render game */\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"Hangman\">\n\t\t\t\t<h1>Hangman</h1>\n\t\t\t\t<img\n\t\t\t\t\tsrc={this.props.images[this.state.nWrong]}\n\t\t\t\t\talt={this.state.guessed}\n\t\t\t\t/>\n\t\t\t\t<p>Number of wrong guesses: {this.state.nWrong} </p>\n\t\t\t\t<p className=\"Hangman-word\">{this.guessedWord()}</p>\n\t\t\t\t<p className=\"Hangman-btns\">\n\t\t\t\t\t{this.state.nWrong < this.props.maxWrong\n\t\t\t\t\t\t? this.generateButtons()\n\t\t\t\t\t\t: this.gameOver()}\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Hangman;\n"]},"metadata":{},"sourceType":"module"}